type Query {
    getBeers: [Beer!]!
    getBeer(id: ID!) : Beer
}

type Beer {
    id: ID!
    name: String
    proof: Int
    isAllowed: Boolean
    sellIn: [Shop]
}

type Shop {
    id: ID!
    name: String
}

input BeerInput {
    name: String
    proof: Int
    isAllowed: Boolean
}

type BeerCommands {
    add(input: BeerInput) : Beer
    remove(id: Int!) : Boolean
}

extend type Mutation {
    Beer: BeerCommands,
}